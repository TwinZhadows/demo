apiVersion: apps/v1
kind: Deployment
metadata:
  name: demoapp
  namespace: demo
  labels:
    customer: training
    environment: development
    app: demoapp
spec:
  selector:
    matchLabels:
      app: demoapp
  replicas: 2
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demoapp
    spec:
      containers:
        - image: localhost:5000/demoapp:latest
          name: demoapp
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "300m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
          env:
            - name: SECRET_KAFKA_HOST
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: kafka_host
            - name: SECRET_KAFKA_PORT
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: kafka_port
            - name: SECRET_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: db_host
            - name: SECRET_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: db_port
            - name: SECRET_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: db_username
            - name: SECRET_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: db_password
            - name: SECRET_DB_REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: redis_host
            - name: SECRET_DB_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: redis_port
            - name: SECRET_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: redis_password
            - name: SECRET_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: demoapp
                  key: jwt_secret
---
apiVersion: v1
kind: Service
metadata:
  name: demoapp
  namespace: demo
  labels:
    app: demoapp
spec:
  type: ClusterIP
  ports:
    - port: 8080
  selector:
    app: demoapp
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: demoapp
  namespace: demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: demoapp
  minReplicas: 2
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80